name: HACS Validation

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  hacs-validation:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: HACS Validation
        uses: hacs/action@main
        with:
          category: integration
          version: 1.0.0

  python-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-asyncio pytest-cov

      - name: Run tests
        run: |
          cd custom_components/planthub
          pytest test_webhook.py -v --cov=. --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./custom_components/planthub/coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort mypy

      - name: Lint with flake8
        run: |
          flake8 custom_components/planthub --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 custom_components/planthub --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Check formatting with black
        run: |
          black --check custom_components/planthub

      - name: Check imports with isort
        run: |
          isort --check-only custom_components/planthub

      - name: Type check with mypy
        run: |
          mypy custom_components/planthub --ignore-missing-imports

  build:
    runs-on: ubuntu-latest
    needs: [hacs-validation, python-tests, lint]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          body: |
            Changes in this Release:
            ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false
